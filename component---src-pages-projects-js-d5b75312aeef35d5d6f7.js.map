{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/utils/helpers.js"],"names":["data","history","allMarkdownRemark","edges","images","allFile","imageMap","Utils","getImageMap","title","className","fluid","map","node","key","id","frontmatter","image","fields","slug","html","query","regex","hasMultipleImages","limit","reduce","relativePath","match","hasOwnProperty","length","push","childImageSharp","arr"],"mappings":"6FAAA,0GAMe,sBAAe,IAAZA,EAAW,EAAXA,KACVC,EAAUD,EAAKE,kBAAkBC,OAAS,GAC1CC,EAASJ,EAAKK,QAAQF,OAAS,GAC/BG,EAAWC,IAAMC,YAAYJ,EAAQ,sBAC3C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKK,MAAM,aACX,kBAAC,IAAD,CAAWA,MAAM,YAAjB,KAGA,kBAAC,IAAD,CAAWC,UAAU,YAAYC,OAAK,GACnCV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACX,yBAAKC,IAAKD,EAAKE,IACb,kBAAC,IAAD,CACEC,YAAaH,EAAKG,YAClBC,MAAOX,EAASO,EAAKK,OAAOC,MAC5BC,KAAMP,EAAKO,OAEb,wBAAIV,UAAU,gBAQnB,IAAMW,EAAK,c,0HChCH,G,oBAAA,CACbb,YAAa,SAACJ,EAAQkB,EAAOC,EAA2BC,GACtD,YADoE,IAAzCD,OAAoB,QAAqB,IAAdC,MAAQ,GACvDpB,EAAOqB,QAAO,SAACb,EAAKK,GACzB,IAAME,EAAOF,EAAMJ,KAAKa,aAAaC,MAAML,GAAO,GAClD,GAAIC,EACF,GAAIX,EAAIgB,eAAeT,GACjBP,EAAIO,GAAMU,QAAUL,GACtBZ,EAAIO,GAAMW,KAAKb,EAAMJ,KAAKkB,gBAAgBpB,WACvC,CACL,IAAMqB,EAAM,GACZA,EAAIF,KAAKb,EAAMJ,KAAKkB,gBAAgBpB,OACpCC,EAAIO,GAAQa,OAGdpB,EAAIO,GAAQF,EAAMJ,KAAKkB,gBAAgBpB,MAEzC,OAAOC,IACN","file":"component---src-pages-projects-js-d5b75312aeef35d5d6f7.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { PageLayout, PageTitle, Projects } from \"../components\"\nimport { SEO, Utils } from \"../utils\"\nimport Container from \"react-bootstrap/Container\"\n\nexport default ({ data }) => {\n  const history = data.allMarkdownRemark.edges || []\n  const images = data.allFile.edges || []\n  const imageMap = Utils.getImageMap(images, /\\/[projects].*\\/|$/)\n  return (\n    <PageLayout>\n      <SEO title=\"Projects\" />\n      <PageTitle title=\"Projects\">\n        &nbsp;\n      </PageTitle>\n      <Container className=\"mt-5 pt-3\" fluid>\n        {history.map(({ node }) => (\n          <div key={node.id}>\n            <Projects\n              frontmatter={node.frontmatter}\n              image={imageMap[node.fields.slug]}\n              html={node.html}\n            />\n            <hr className=\"w-75\" />\n          </div>\n        ))}\n      </Container>\n    </PageLayout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n      sort: { fields: [frontmatter___startDate], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            project\n            tags\n            link\n            startDate(formatString: \"MMMM\")\n            endDate(formatString: \"MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    allFile(\n      filter: {\n        extension: { eq: \"png\" }\n        relativePath: { regex: \"/project/\" }\n        relativeDirectory: { regex: \"/content/projects/\" }\n      }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 400) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n          relativePath\n        }\n      }\n    }\n  }\n`\n","export default {\n  getImageMap: (images, regex, hasMultipleImages = false, limit = 3) => {\n    return images.reduce((map, image) => {\n      const slug = image.node.relativePath.match(regex)[0]\n      if (hasMultipleImages) {\n        if (map.hasOwnProperty(slug)) {\n          if (map[slug].length <= limit)\n            map[slug].push(image.node.childImageSharp.fluid)\n        } else {\n          const arr = []\n          arr.push(image.node.childImageSharp.fluid)\n          map[slug] = arr\n        }\n      } else {\n        map[slug] = image.node.childImageSharp.fluid\n      }\n      return map\n    }, {})\n  },\n}\n"],"sourceRoot":""}